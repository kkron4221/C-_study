using System;
using System.Threading;

namespace A
{
  public delegate void ShowMessage(int n);
  
  public class DelegateTest
  {
    static void Main()
    {
      const int N = 6;
      ShowMessage asyncCall = new ShowMessage(AsynchronousMethod);
      
      IAsyncResult ar = asyncCall.BeginInvoke(N, null, null);
      
      for(int i=0; i<N; ++i)
      {
        Thread.Sleep(600);
        Console.Write("Main ({0})\n", i);
      }
      
      asyncCall.EndInvoke(ar);
      Console.Write("Complete job\n");
    }
    
    static void AsynchronousMethod(int n)
    {
      for(int i=0; i<n; ++i)
      {
        Thread.Sleep(1000);
        Console.Write("AsynchronousMethod ({0})\n", i);
      }
    }
    
    static void B(IAsyncResult ar){}
  }
}
